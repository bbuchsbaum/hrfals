% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{lss_kernel_cpp}
\alias{lss_kernel_cpp}
\title{Enhanced LSS kernel implemented in C++ with optimizations}
\usage{
lss_kernel_cpp(
  C,
  A,
  Y,
  p_vec,
  lambda_ridge = 0,
  shared_C = TRUE,
  eig_tol = -1,
  denom_tol = 1e-10,
  block_size = 1000L
)
}
\arguments{
\item{C}{Matrix of trial regressors (n x T)}

\item{A}{Matrix of nuisance regressors (n x m)}

\item{Y}{BOLD data matrix (n x V)}

\item{p_vec}{Vector of length n for LSS algorithm (see FastLSS proposal)}

\item{lambda_ridge}{Ridge penalty applied when computing (A^T A)}

\item{shared_C}{Logical flag for future extensions (currently ignored)}

\item{eig_tol}{Tolerance for eigenvalue checks (default: adaptive)}

\item{denom_tol}{Tolerance for denominator checks (default: 1e-10)}

\item{block_size}{Block size for voxel processing (default: 1000)}
}
\value{
Matrix of trial coefficients (T x V)
}
\description{
This implementation provides multiple solver strategies, enhanced numerical
stability, and optimized memory access patterns for improved performance.
}
