% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimate_hrf_cfals.R
\name{estimate_hrf_cfals}
\alias{estimate_hrf_cfals}
\title{Estimate HRF for a target event term using CF-ALS}
\usage{
estimate_hrf_cfals(
  fmri_data_obj,
  fmrireg_event_model,
  target_event_term_name,
  hrf_basis_for_cfals,
  confound_obj = NULL,
  method = c("ls_svd_1als", "ls_svd_only", "cf_als"),
  lambda_init = 1,
  lambda_b = 10,
  lambda_h = 1,
  R_mat = c("identity", "basis_default"),
  fullXtX = FALSE,
  precompute_xty_flag = TRUE,
  max_alt = 1,
  hrf_shape_duration = attr(hrf_basis_for_cfals, "span"),
  hrf_shape_resolution = fmrireg_event_model$sampling_frame$TR[1],
  ...
)
}
\arguments{
\item{fmri_data_obj}{`fmrireg::fmri_dataset` or numeric BOLD matrix.}

\item{fmrireg_event_model}{An `event_model` describing the full design.}

\item{target_event_term_name}{Name of the event_term to estimate.}

\item{hrf_basis_for_cfals}{An `HRF` object with `nbasis > 1`.}

\item{confound_obj}{Optional confound matrix.}

\item{method}{Estimation engine to use ("ls_svd_only", "ls_svd_1als", "cf_als").}

\item{lambda_init}{Ridge penalty for initial LS solve.}

\item{lambda_b}{Ridge penalty for the beta update.}

\item{lambda_h}{Ridge penalty for the h update.}

\item{R_mat}{Either the string \code{"identity"} (default) or
\code{"basis_default"} to request an automatically generated penalty
matrix, or a numeric matrix specifying a custom penalty for the h
update.}

\item{fullXtX}{Logical. If `TRUE`, the h-update step uses the full
Gramian matrix \eqn{(\sum_l \beta_l X_l)^\top (\sum_m \beta_m X_m)}
with cross-condition terms. If `FALSE` (default), the Gramian is
approximated by omitting cross-condition terms,
\eqn{\sum_l \beta_l^2 X_l^\top X_l}. A single shared HRF
coefficient vector is still estimated per voxel.}

\item{precompute_xty_flag}{Logical; passed to `cf_als_engine`.}

\item{max_alt}{Number of alternating updates for `cf_als`.}

\item{hrf_shape_duration}{Duration in seconds for reconstructed HRF grid.}

\item{hrf_shape_resolution}{Sampling resolution of the HRF grid.}
}
\value{
An `hrfals_fit` object.
}
\description{
High level wrapper around the CFALS engines operating on a single
`event_term` within an `fmrireg::event_model`. Design matrices and
projection are handled by `create_cfals_design`.
}
