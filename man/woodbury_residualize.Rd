% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/woodbury_residualize.R
\name{woodbury_residualize}
\alias{woodbury_residualize}
\title{Residualize trial regressors via Woodbury identity}
\usage{
woodbury_residualize(C, A, lambda_ridge = 0)
}
\arguments{
\item{C}{Numeric matrix of trial regressors (n \eqn{\times} T).}

\item{A}{Numeric matrix of nuisance regressors (n \eqn{\times} m).}

\item{lambda_ridge}{Ridge penalty for computing the pseudoinverse of
\eqn{A}. Defaults to 0 (no penalty).}
}
\value{
Matrix of the same dimensions as \code{C} containing residualized
  regressors.
}
\description{
Computes \eqn{V = C - A(A^+C)} where \eqn{A^+ = (A^TA + \lambda I)^{-1}A^T}.
This avoids forming the explicit projection matrix and uses BLAS-optimized
matrix multiplications.
}
\examples{
n <- 20; m <- 5; T <- 10
A <- matrix(rnorm(n * m), n, m)
C <- matrix(rnorm(n * T), n, T)
V1 <- woodbury_residualize(C, A)
# explicit projection for comparison
AtA <- crossprod(A)
P <- cholSolve(AtA, crossprod(A, C))
V2 <- C - A \%*\% P
stopifnot(max(abs(V1 - V2)) < 1e-12)
}
