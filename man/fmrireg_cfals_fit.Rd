% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cfals_methods.R
\name{fmrireg_cfals_fit}
\alias{fmrireg_cfals_fit}
\title{Construct an \code{fmrireg_cfals_fit} object}
\usage{
fmrireg_cfals_fit(
  h_coeffs,
  beta_amps,
  method,
  lambdas,
  call,
  hrf_basis,
  design_info,
  residuals,
  recon_hrf = NULL,
  gof = NULL
)
}
\arguments{
\item{h_coeffs}{Matrix of HRF basis coefficients (d \eqn{\times} v).}

\item{beta_amps}{Matrix of condition amplitudes (k \eqn{\times} v).}

\item{method}{Character string indicating the estimation method.}

\item{lambdas}{Numeric vector of regularisation parameters.}

\item{call}{The matched call to the wrapper function.}

\item{hrf_basis}{HRF basis object used for the estimation.}

\item{design_info}{List with design metadata (d, k, n, v, fullXtX).}

\item{residuals}{Residual matrix from the projected data fit.}

\item{recon_hrf}{Matrix of reconstructed HRF shapes.}

\item{gof}{Numeric vector of goodness-of-fit statistics per voxel.}
}
\value{
An object of class \code{fmrireg_cfals_fit}.
}
\description{
Container class storing the results of CFALS estimation.  Fields
include the HRF basis coefficients (`h_coeffs`), condition amplitudes
(`beta_amps`), details of the estimation method, regularisation
parameters and design information.
}
\details{
Simple constructor used by [fmrireg_cfals()] to package the
results returned by the various CFALS engines.
}
\examples{
\dontrun{
library(fmrireg)

# Create sampling frame and event model
sframe <- fmrireg::sampling_frame(blocklens = 40, TR = 1)
ev_df <- data.frame(onset = c(5, 15, 25), block = 1, cond = "A")
emod <- fmrireg::event_model(onset ~ hrf(cond), data = ev_df, 
                             block = ~ block, sampling_frame = sframe)

# Simulate some BOLD data
Y_matrix <- matrix(rnorm(40 * 5), 40, 5) # 40 timepoints, 5 voxels

# Fit using CF-ALS with SPMG3 basis (3 basis functions)
fit <- fmrireg_cfals(Y, emod, HRF_SPMG3)
print(fit)
}
}
