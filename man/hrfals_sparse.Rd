% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cfals_wrapper.R
\name{hrfals_sparse}
\alias{hrfals_sparse}
\title{Convenient wrapper enabling sparse beta estimation}
\usage{
hrfals_sparse(
  ...,
  beta_penalty = list(l1 = 0.05, alpha = 1, warm_start = TRUE),
  design_control = list(standardize_predictors = TRUE, cache_design_blocks = TRUE)
)
}
\arguments{
\item{...}{Arguments passed on to [hrfals()].}

\item{beta_penalty}{List with elements `l1`, `alpha`, and `warm_start`
forwarded to `estimate_hrf_cfals` for sparse beta estimation.
Setting `l1 > 0` triggers an Elastic Net beta update with mixing
parameter `alpha`. Typical `l1` values are between 0.01 and 0.1 for
scaled predictors. Warm-starting reuses betas from the previous
iteration to speed convergence.}

\item{design_control}{List of design matrix processing options. Set
`standardize_predictors = TRUE` to z-score continuous predictors
before estimation. Betas are returned in the original units. When
`cache_design_blocks = TRUE` lagged design matrices are cached in
memory when feasible to avoid recomputation.}
}
\description{
`hrfals_sparse()` simply calls [hrfals()] with sparse beta defaults
(`beta_penalty$l1 > 0`) and standard design control. It provides a
shorthand for common sparse modeling use cases.
}
